RELEASE NOTES
=============

This is omniORB 4.3.0 beta 1.

See README.unix.txt or README.win32.txt for building instructions.
See the documentation in the doc directory for more information.


Changes since omniORB 4.2.x
---------------------------

omniORB 4.3 has a number of new features and changes:

 - A new omniORB-specific HTTP / HTTPS transport, with a number of
   capabilities:

    . Full encapsulation of GIOP messages in HTTP.

    . Support for web proxies, transparent web proxies, reverse proxies.

    . For cases where security is important but an end-to-end HTTPS
      connection cannot be assured, support for in-message encryption.

 - Support for vast CORBA messages on 64 bit platforms.

 - Support for PyPy in omniidl and omniORBpy.

 - omniCallDescriptor::current() and omniCallHandle::current() to
   access information about the current call on a server.

 - The sslContext class is now in the omni namespace.


Changes since omniORB 4.1.x
---------------------------

omniORB 4.2 has a number of new features compared to omniORB 4.1.x,
both large and small. Here are the highlights:

 - Full Asynchronous Method Invocation (AMI) support.

 - Support for ZIOP, which compresses large messages.

 - Call timeouts are indicated with the CORBA::TIMEOUT exception,
   rather than CORBA::TRANSIENT (unless suppressed with the
   throwTransientOnTimeout configuration parameter).

 - Servers can be limited to a range of ports to listen on.

 - Performance improvements to Any, sequence buffer management,
   unions, and other areas.

 - Ancient Python versions are no longer supported. omniidl and
   omniORBpy now only work with Python 2.5 or later.

 - omniidl works with Python 3.x as well as 2.x.


Known issues / limitations
--------------------------

This release has the following known issues and omissions:

 - valuetypes supporting local interfaces generate invalid C++. This
   is an issue with the standard C++ mapping.
