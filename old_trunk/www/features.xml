<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet href="layout.xml" type="text/xsl"?>

<page title="omniORB features" head="omniORB features" id="features">

omniORB is a CORBA Object Request Broker (ORB) for C++ and Python.
There are currently two main strands of development, a stable release
and a beta release.

<h2>Stable release: omniORB 3.0.x</h2>

omniORB 3.0.x adheres to version 2.3 of the CORBA specification, with
some CORBA 2.4 features. The technical highlights are:

<ul>
  <li>C++ and Python language bindings.</li>
  <li>Support for the Portable Object Adapter (POA).</li>
  <li>Backwards-compatible with the omniORB 2.x BOA.</li>
  <li>Support for the CORBA 2.4 Interoperable Naming Service (INS).</li>
  <li>Internet Inter-ORB Protocol (IIOP) 1.0 used as the native
      protocol.</li>
  <li>Fully multithreaded runtime.</li>
  <li>TypeCode and type Any.</li>
  <li>CORBA 2.2 DynAny support.</li>
  <li>Dynamic Invocation and Dynamic Skeleton interfaces.</li>
  <li>Complete Naming Service, omniNames.</li>
  <li>The following platforms are supported:
    <ul>
      <li>Windows NT / XP / 9x with Visual C++ version 5.0 and above</li>
      <li>Linux / EGCS 2.91 or GCC 2.95 and above</li>
      <li>Solaris 2.{5,6,7,8} / Sun C++ version 4.2 and above, or
          GCC 2.95 and above</li>
      <li>HPUX 11.00/ aC++</li>
      <li>SGI Irix 6.x/ SGI C++ compiler 7.2</li>
      <li>Digital Unix 4.0D/ DEC C++ compiler version 6.0</li>
      <li>IBM AIX 4.2/ IBM C Set++ 3.1.4 and xlC 5.0 (Visual Age C++ 5.0)</li>
      <li>IBM AIX 4.3/ IBM C Set++ 3.6.6 and xlC 5.0 (Visual Age C++ 5.0)</li>
      <li>HPUX 10.20/ aC++ (B3910 A.01.04)</li>
      <li>OpenVMS Alpha 6.2/ DEC C++ compiler 6.2/5.5 (UCX 4.1 ECO 8)</li>
      <li>OpenVMS Vax 6.1/ DEC C++ compiler 5.5 (UCX 4.0 ECO 1)</li>
      <li>NextStep 3.3/ gcc-2.7.2</li>
      <li>Reliant Unix 5.43/CDS++</li>
      <li>Phar Lap's Real Time ETS Kernel</li>
      <li>SCO Unixware 7</li>
      <li>Mac OS X</li>
      <li>Fujitsu Siemens BS2000 (with patch in the distribution)</li>
      <li>...and many others.</li>
    </ul>
  </li>
  <li>Fully interoperable with other CORBA ORBs.</li>
</ul>

There are a number of missing features, notably:

<ul>
  <li>Support for IDL types long double, wchar, wstring, fixed,
      valuetype. Long long types are supported if the C++ compiler has
      native support for 64-bit types, but long longs cannot be
      inserted into Anys, to retain library binary compatibility with
      omniORB 3.0.0.
  </li>
  <li>The PortableServer::Current interface is not supported.</li>
</ul>


<h2>Beta release: omniORB 4.0.x</h2>

omniORB 4.0 is currently in beta. In addition to the features of
omniORB 3.0 listed above, it has the following additional features:

<ul>
  <li>Adheres to the CORBA 2.6 specification.</li>
  <li>Support for GIOP 1.1 and 1.2.</li>
  <li>Support for wchar, wstring and code set negotiation.</li>
  <li>Full long long, long double, fixed point support.</li>
  <li>PortableServer::Current.</li>
  <li>Unix domain socket transport.</li>
  <li>Bidirectional GIOP.</li>
  <li>Interoperable Secure Socket Layer transport.</li>
  <li>More flexible thread management.</li>
  <li>CORBA 2.6 DynAny interfaces.</li>
  <li>Many other optimisations and improvements.</li>
</ul>

<br/>

<small>Portions of this page are based on a features page Copyright
AT&amp;T Laboratories Cambridge.</small>

</page>