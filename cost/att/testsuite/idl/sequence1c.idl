//
//    Copyright (C) 2001 AT&T Laboratories Cambridge Ltd.
//
//    This file is part of the OMNI Testsuite.
//
//    The testsuite is free software; you can redistribute it and/or
//    modify it under the terms of the GNU Library General Public
//    License as published by the Free Software Foundation; either
//    version 2 of the License, or (at your option) any later version.
//
//    This library is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//    Library General Public License for more details.
//
//    You should have received a copy of the GNU Library General Public
//    License along with this library; if not, write to the Free
//    Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
//    02111-1307, USA
//
//
// sequence1c.idl
//

#include "sequence1b.idl"

union yet_another_union switch(char)
{
case 'a': sequence<string> str;
case 'g': sequence<any> a;
case 'b': sequence<intf2> i2;
case 'c': sequence< sequence< sequence< unionDouble1> ,3 > > udbl1;
case 'r': sequence<long,5> lc;
default: double d2;
};

typedef sequence<sequence<yet_another_union> >  seqYetAnotherUnion;
typedef seqYetAnotherUnion multiArrayYetAnotherUnion[30][40];
typedef multiArrayYetAnotherUnion aliasMultiArrayYetAnotherUnion ;


union disEnumUnion switch(discrimEnum)
{
default: intf2 i2;
case A: any a1;
case B: sequence<yet_another_union> syaun;
};

module yat_another_outer
{
typedef disEnumUnion aliasDisEnumUnion;
typedef sequence<sequence<discrimEnum> > multiDiscrimEnum;
};
