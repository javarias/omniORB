#!/bin/sh
# **********************************************************************
#
# Copyright (c) 2001
# Object Oriented Concepts, Inc.
# Billerica, MA, USA
#
# All Rights Reserved
#
# **********************************************************************

#
# Try to find top-level directory
#
if test -f config/sh.init
then
    top_srcdir=.
elif test -f ../config/sh.init
then
    top_srcdir=..
else
    $echo "$0: can't find top-level directory"
    exit
fi

#
# Run standard init script
#
. $top_srcdir/config/sh.init

#
# Set Java CLASSPATH
#
CLASSPATH="$top_srcdir/lib${SEPARATOR}$CLASSPATH"
export CLASSPATH

#
# Set the boot classpath
#
set_bootclasspath

#
# Delete old log files
#
rm -f poa.log
rm -f poa_client.log
rm -f poa_server.log

#
# Run client-only POA tests
#
$echo
$JAVA test.poa.TestActivate 2>&1 | tee -a poa.log
$JAVA test.poa.TestDeactivate 2>&1 | tee -a poa.log
$JAVA test.poa.TestCollocated 2>&1 | tee -a poa.log
$JAVA test.poa.TestCreate 2>&1 | tee -a poa.log
$JAVA test.poa.TestDestroy 2>&1 | tee -a poa.log
$JAVA test.poa.TestFind 2>&1 | tee -a poa.log
$JAVA test.poa.TestMisc 2>&1 | tee -a poa.log

#
# Set name of reference file
#
ref=Test.ref

#
# Start TestDefaultServantServer
#
$echo "Testing default servant... \c"
rm -f $ref
( $JAVA test.poa.TestDefaultServantServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestDefaultServantServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestDefaultServantServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestServantActivatorServer
#
$echo "Testing servant activator... \c"
rm -f $ref
( $JAVA test.poa.TestServantActivatorServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestServantActivatorServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestServantActivatorServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestServantLocatorServer
#
$echo "Testing servant locator... \c"
rm -f $ref
( $JAVA test.poa.TestServantLocatorServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestServantLocatorServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestServantLocatorServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestLocationForwardServer
#
$echo "Testing LocationForward... \c"
rm -f $ref
( $JAVA test.poa.TestLocationForwardServerMain & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestLocationForwardServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestLocationForwardClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestLocationForwardServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestAdapterActivatorServer
#
$echo "Testing adapter activator... \c"
rm -f $ref
( $JAVA test.poa.TestAdapterActivatorServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestAdapterActivatorServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestAdapterActivatorServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestPOAManagerServer
#
$echo "Testing POAManager... \c"
rm -f $ref
( $JAVA test.poa.TestPOAManagerServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestPOAManagerServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestPOAManagerClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestPOAManagerServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

#
# Start TestMultipleOrbsServer
#
$echo "Testing multiple ORB instances (same thread)... \c"
rm -f $ref
( $JAVA test.poa.TestMultipleOrbsServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestMultipleOrbsServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestMultipleOrbsClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestMultipleOrbsServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi


#
# Start TestMultipleOrbsThreadedServer
#
$echo "Testing multiple ORB instances (multiple threads)... \c"
rm -f $ref
( $JAVA test.poa.TestMultipleOrbsThreadedServer & echo $! > srvid ) \
2>&1 | tee -a poa_server.log &
count=0
while test ! -s $ref -a $count -lt 8
do
    sleep 1
    count=`expr $count + 1`
done
if test ! -s $ref
then
    $echo "Failed!"
    $echo "(TestMultipleOrbsThreadedServer was not started)"
    exit
fi

#
# Run client
#
$JAVA test.poa.TestMultipleOrbsThreadedClient 2>&1 | \
tee -a poa_client.log

#
# Wait for server deactivation
#
count=0
while test -r $ref -a $count -lt 3
do
    sleep 1
    count=`expr $count + 1`
done

if test -r $ref
then
    $echo "Failed!"
    $echo "(TestMultipleOrbsThreadedServer was not deactivated by client - \c"
    $echo "deactivating server now)"
    deactivate
else
    $echo "Done!"
fi

