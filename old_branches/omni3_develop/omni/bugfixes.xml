<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="bugfixes.xsl"?>

<!-- The following bugs have been fixed since the omniORB 3.0.2     -->
<!-- release. This file is transformed into html with bugfixes.xsl. -->

<!-- Editors: make sure the content you add is well-formed XML.     -->

<buglist version="3.0.2">

<bug id="6" date="Mon Nov 13 11:47:35 GMT 2000" user="djr">

  <summary>System exceptions not forwarded from incarnate() and preinvoke()</summary>
  <reported>Chris Newbold</reported>
  <link href="http://www.uk.research.att.com/omniORB/archives/2000-11/0083.html"/>
  <text>
  System exceptions thrown from a ServantLocator's preinvoke() method, or a
  ServantActivator's incarnate() method are silently converted into an
  OBJ_ADAPTER exception.  They should be passed on to the client without
  change.
  </text>
</bug>

<bug id="5" date="Tue Nov  7 15:31:24 GMT 2000" user="dpg1">

  <summary>Examples fail to build with nmake on Windows 9x</summary>
  <text>
  As explained in 3.0.1's <a href="bug301.html#bug9">bug 9</a>, some
  Windows 98 machines (but not all) fail to cope with the pipe between
  the C pre-processor and omniidl. The work-around is to use the -T
  flag. The dir.mak files in the examples now use this flag.
  </text>
</bug>

<bug id="4" date="Tue Oct 24 10:44:08 BST 2000" user="dpg1">

  <summary>omniidl system dependency clean-up</summary>
  <text>
  Not really a bug, but some long-standing ugliness in omniidl's
  system dependencies has been cleaned up. It's listed here because
  any code which uses omniidl's C++ interface may need to be slightly
  modified.
  </text>
</bug>

<bug id="3" date="Mon Oct 16 18:56:53 BST 2000" user="djs">

  <summary>omniIDL/C++ backend tie template operation mapping error</summary>
  <reported>Chris Newbold</reported>
  <link href="http://www.uk.research.att.com/omniORB/archives/2000-10/0071.html"/>
  <text>
  The tie template code used the _objref argument mapping rather than the 
  _impl mapping.
  </text>
</bug>

<bug id="2" date="Fri Oct 13 09:56:03 BST 2000" user="djr">

  <summary>Race condition in POA triggers assertion failure</summary>
  <reported>Chris Newbold</reported>
  <link href="http://www.uk.research.att.com/omniORB/archives/2000-10/0055.html"/>
  <text>
  There is a race condition in the POA between deactivating an object
  and it being etherealised, which can trigger an assertion failure
  (which in turn throws an omniORB::fatalException()).
  </text>
</bug>

<bug id="1" date="Fri Oct  6 09:58:55 BST 2000" user="dpg1">

  <summary>C++ back-end claims that it does not support long long</summary>
  <reported>Chris Knight</reported>
  <text>
  A new check added to the C++ back-end incorrectly reported that long
  long is not supported, even though it is. Note that long long is not
  currently supported in Any.
  </text>
</bug>

</buglist>
