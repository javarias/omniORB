<?xml version="1.0" encoding="ISO-8859-1" standalone="yes"?>
<?xml-stylesheet type="text/xsl" href="bugfixes.xsl"?>

<!-- The following bugs have been fixed since the omniORB 3.0.2     -->
<!-- release. This file is transformed into html with bugfixes.xsl. -->

<!-- Editors: make sure the content you add is well-formed XML.     -->

<buglist version="3.0.3">

<bug id="7" date="Tue May 29 12:14:54 BST 2001" user="sll">

  <summary>System clock change causes the scavenger thread to consume lots of CPU cycles</summary>
  <reported>Peter Rönnquist</reported>
  <link
  href="http://www.uk.research.att.com/omniORB/archives/2001-05/0195.html"/>
  <text>
  Scavenger now get the real time after each scan. This is to cope with
  the system clock set backward by a large amount. Seems to happen a lot to
  some system..
  </text>
</bug>

<bug id="6" date="Fri Apr 27 11:58:25 BST 2001" user="dpg1">

  <summary>Incorrect namespaces for MSVC++ constant
  work-around</summary>
  <reported>Daniel Bell</reported>
  <link
  href="http://www.uk.research.att.com/omniORB/archives/2001-03/0107.html"/>
  <text>
  The code generated to give constants external linkage on MSVC failed
  for nested modules.
  </text>
</bug>

<bug id="5" date="Wed Apr 25 17:49:17 BST 2001" user="dpg1">

  <summary>Incorrect code generated for includes at non-file
  scope</summary>
  <reported>Olaf Meding</reported>
  <link
  href="http://www.uk.research.att.com/omniORB/archives/2001-04/0152.html"/>
  <text>
  The IDL compiler C++ back-end would generate incorrect code for
  #includes at non-file scope. Now, declarations inside files #included
  at non-file scope are treated as if they appeared in the including
  file.
  </text>
</bug>

<bug id="4" date="Tue Mar 27 17:56:31 BST 2001" user="djr">

  <summary>Bug in ORB core causes assertion failure</summary>
  <reported>Roumen Ivanov</reported>
  <link
   href="http://www.uk.research.att.com/omniORB/archives/2001-03/0159.html"/>
  <text>
  A bug in the ORB core would causes an assertion failure when an object is
  deactivated.  The problem occurs if the object has local references whose
  c++ type disagrees with that of the object.
  <p/>
  This may explain a problem with omniNames, given in the link above.
  </text>
</bug>

<bug id="3" date="Wed Mar 21 16:31:13 GMT 2001" user="dpg1">

  <summary>Incorrect TypeCode for union with multiple case
  labels</summary>
  <reported>Clemens Fischer</reported>
  <text>
  The generated TypeCode for a union with multiple case labels would
  have the wrong member count. e.g. the count for
  <p/>
  <pre>
  union U switch (long) {
    case 1:
    case 2: long l;
    case 3: string s;
  };
  </pre>
  would be 2 instead of 3.
  </text>
</bug>

<bug id="2" date="Tue Mar 20 16:55:07 GMT 2001" user="dpg1">

  <summary>Incorrect DynSK stubs for some recursive types</summary>
  <reported>Lars Immisch</reported>
  <link
  href="http://www.uk.research.att.com/omniORB/archives/2001-03/0101.html"/>
  <text>
  The IDL compiler C++ back-end would generate incorrect TypeCode
  constants for IDL like <p/>
  <pre>
    struct S {
      sequence &lt;sequence &lt;S&gt; &gt; a;
    };
  </pre>
  </text>
</bug>

<bug id="1" date="Tue Mar 20 16:55:07 GMT 2001" user="dpg1">

  <summary>Memory corruption when initialising multiply-recursive
  structures</summary>
  <reported>Marcus Bullingham</reported>
  <link
  href="http://www.uk.research.att.com/omniORB/archives/2001-02/0259.html"/>
  <text>
  IDL types where there was more than one recursion to the same type
  would corrupt memory, sometimes leading to a crash.
  </text>
</bug>

</buglist>
